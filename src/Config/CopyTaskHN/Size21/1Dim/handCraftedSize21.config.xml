<?xml version="1.0" encoding="utf-8" ?>
<Config>

  <!-- The name of the experiment -->
  <Name>CopyTask/HyperNEAT/Size21/1Dim/HandCrafted</Name>

  <!-- The fully qualified name of the experiment class -->
  <ExperimentClass>ENTM.Experiments.CopyTaskHyperNEAT.CopyTaskHyperNEATExperiment</ExperimentClass>

  <!-- Experiment description -->
  <Description>
    Copy task hyperneat
    Memory vector size 21
    Bit vector size 21
    1 Dimensional substrate
    Handcrafted substrate
  </Description>

  <SeedGenome>ENTM/Genomes/CopyTask/Size3/handcraftedSize3Restricted_champ1.xml</SeedGenome>

  <!-- Comment about the specific experiment setup. NO LINE BREAKS! -->
  <Comment>Size 21 handcrafted substrate</Comment>
  
  <!-- How many experiments will be performed (serially) -->
  <ExperimentCount>20</ExperimentCount>

  <!-- The maximum number of generations that the experiment will run before terminating if the maximum fitness has not been achieved. -1 for unlimited -->
  <MaxGenerations>10000</MaxGenerations>

  <!-- NEAT -->
  <PopulationSize>300</PopulationSize>

  <!-- The generation interval between writing the status to the log -->
  <LogInterval>100</LogInterval>

  <!-- Wether or not to use parallel or serial evaluation. Parallel is faster, but serial can be necessary for debugging -->
  <MultiThreading>true</MultiThreading>

  <!-- Maximum number of threads if multithreading is enabled. -1 defaults to CPU core count -->
  <MaxDegreeOfParallelism>-1</MaxDegreeOfParallelism>

  
  <!-- Turing Machine Parameters-->
  <TuringMachineParams>

    <!-- If set to false, the Turing machine will always return a 0 vector -->
    <Enabled>true</Enabled>

    <!-- Maximum memory size (-1 for unlimited) -->
    <N>-1</N>

    <!-- Write vector size -->
    <M>21</M>
    
    <!-- If M > 1 this will initialize the values of the turing machine with a gradient from 0 to 1. Default = false -->
    <InitalizeWithGradient>false</InitalizeWithGradient>
    
    <!-- The turing machine vectors can have an initial values instead of a gradient. Default = 0-->
    <InitalValue>0</InitalValue>
    
    <!-- Minimum similarity of the turing data vector to consider this location for a content jump -->
    <MinSimilarityToJump>0.5</MinSimilarityToJump>

    <!-- Number of Read/Write heads-->
    <Heads>1</Heads>

    <!-- Number of shift inputs -->
    <ShiftLength>3</ShiftLength>

    <!-- "Single" or "Multiple". Single has only a single input value, multiple has 3 for [-1, 0, 1] -->
    <ShiftMode>Multiple</ShiftMode>

	 <!-- A extra memory location is maintained with the initial values at the end of the tape. If the machine write to this location, a new one is created.
		This can be used to give the tm an option to always have a place to jump to create new memories. Default = false -->
	<UseMemoryExpandLocation>false</UseMemoryExpandLocation>	

	<!-- Similarity threshold to check if a write operation changed the values at a location Default = 0.9 -->
	<DidWriteThreshold>0.9</DidWriteThreshold>	
	
    <!-- "Interpolate" or "Overwrite". 
        Interpolate: Turing machine will interpolate between the write vector and the content already stored at the position.
        Overwrite: Turing machine will overwrite if output is >= 0.5, otherwise it will not write.
    -->
    <WriteMode>Overwrite</WriteMode>

  </TuringMachineParams>


  <!-- Copy Task Parameters -->
  <CopyTaskParams>

    <!-- Evaluation iterations -->
    <Iterations>50</Iterations>

    <!-- The seed used for random environment generations -->
    <RandomSeed>0</RandomSeed>

    <!-- The size of the bit vectors to be copied. -->
    <VectorSize>21</VectorSize>

    <!-- Maximum length of the sequence of bit vectors. 
         If LengthRule is Random, sequence length will be betweeen 1 and MaxLength.
         If LengthRule is Fixed, sequence will always be MaxLength. -->
    <MaxLength>10</MaxLength>

    <!-- "Random" or "Fixed" sequence lengths -->
    <LengthRule>Random</LengthRule>

    <!-- What fitness function to evalutate with.
        StrictCloseToTarget
        PartialScore
        Emilarity
        ClosestBinary
        CompleteBinary
    -->
    <FitnessFunction>StrictCloseToTarget</FitnessFunction>

    <!-- Set to true to eliminate zero vectors in the sequence, as the algorithm can have problems with them. -->
    <EliminateZeroVectors>false</EliminateZeroVectors>

  </CopyTaskParams>


  <!-- Novelty Search Parameters -->
  <NoveltySearch>

    <!-- If false, only environmental objective fitness will be used. -->
    <Enabled>false</Enabled>

    <!-- What behaviour we want to score
      WritePattern:           Use the write position over time as the novelty vector.
      ReadContent:            Use the read vector over time as the novelty vector.
      WritePatternAndInterp:  Use write position and interp as novelty vector.
      ShiftJumpInterp:        Shift, jump and interp for novelty vector
      -->
    <NoveltyVector>ShiftJumpInterp</NoveltyVector>

    <!-- The minimum novelty score an individual must achieve to be entered into the archive. -->
    <PMin>15</PMin>

    <!-- If PMin is adjusted lower than this threshold, novelty search will end. -->
    <PMinLowerThreshold>1</PMinLowerThreshold>

    <!-- Maximum number of generations that the novelty search will run before switching to objective search -->
    <MaxNoveltySearchGenerations>500</MaxNoveltySearchGenerations>

    <!-- Switch to Objective search if the Objective score has reached this value. -->
    <ObjectiveScoreThreshold>.9</ObjectiveScoreThreshold>
    
    <!-- The maximum size of the behaviour archive. -1 for unlimited. -->
    <ArchiveLimit>500</ArchiveLimit>

    <!-- PMin up adjustment factor-->
    <PMinAdjustUp>1.05</PMinAdjustUp>

    <!-- PMin down adjustment factor -->
    <PMinAdjustDown>0.95</PMinAdjustDown>

    <!-- How many individuals can be added to the archive in a generation before PMin is adjusted up -->
    <AdditionsPMinAdjustUp>4</AdditionsPMinAdjustUp>

    <!-- How many generations without archihve additions before PMin is adjusted down -->
    <GenerationsPMinAdjustDown>5</GenerationsPMinAdjustDown>

    <!-- K nearest neighbors -->
    <K>10</K>

    <!-- How often the novelty scorer should report to the log (generations) -->
    <ReportInterval>100</ReportInterval>

    <!-- How many redundant iterations an individual can have before it does not meet minimum criteria. 
      0-1 relative to total timesteps during lifetime. -->
    <MinimumCriteriaReadWriteLowerThreshold>0.1</MinimumCriteriaReadWriteLowerThreshold>
    
    <!-- Multiply the Novely Score with the Objective fitness to the power of x. 0 to use only Novelty Score. -->
    <ObjectiveFactorExponent>0</ObjectiveFactorExponent>

  </NoveltySearch>

  <MultiObjective>
    <!-- Enable multiobjective -->
    <Enabled>false</Enabled>
    
    <!-- Enable the genetic diversity objective. If false, only objective fitness and novelty search will be used. -->
    <GeneticDiversityEnabled>true</GeneticDiversityEnabled>

    <!-- K value for KNN for genetic diversity -->
    <GeneticDiversityK>10</GeneticDiversityK>

    <!-- If the algorithm should reject behaviours that have the same or similar values for all objectives (one copy will be kept) -->
    <RejectSimilarBehaviours>false</RejectSimilarBehaviours>

    <!-- The minimum similarity behaviours can have before being rejected -->
    <RejectSimilarThreshold>0.001</RejectSimilarThreshold>
  </MultiObjective>

  <!-- The network activation scheme to use -->
  <Activation>

    <!-- "Acyclic", "CyclicFixedIters" or "CyclicRelax"
         Acyclic:           Does not support recurrent connections. Network is fully activated each activation.
         CyclicFixedIters:  Each iteration will iterate signals one step from input -> output.
         CyclicRelax:       Activate the network until all node output has remained unchanged between iterations within the threshold, 
                            or until the maximum iteration count is reached. -->
    <Scheme>Acyclic</Scheme>

    <!-- CyclicFixedIters only -->
    <Iters>3</Iters>

    <!-- CyclicRelax only -->
    <Threshold>0.1</Threshold>

    <!-- CyclicRelax only -->
    <MaxIters>5</MaxIters>

  </Activation>

  <CPPNActivation>
    <Scheme>Acyclic</Scheme>
  </CPPNActivation>
  
  <CPPNDistanceInput>false</CPPNDistanceInput>

  <SubstrateSettings>
    <Function>SteepenedSigmoid</Function>
    <WeightThreshold>0.0</WeightThreshold>
    <MaxWeight>10</MaxWeight>
    <Multispatial>true</Multispatial>
  </SubstrateSettings>

  <Substrate>
    <!--Environment start/swith output layer: 0-->
    <Layer type="Input">
      <Node>-0.5</Node>
      <Node>0.5</Node>
    </Layer>
    <!--Environment vector output layer: 1-->
    <Layer type="Input">
      <Node>-1</Node>
      <Node>-.9</Node>
      <Node>-.8</Node>
      <Node>-.7</Node>
      <Node>-.6</Node>
      <Node>-.5</Node>
      <Node>-.4</Node>
      <Node>-.3</Node>
      <Node>-.2</Node>
      <Node>-.1</Node>
      <Node>0</Node>
      <Node>.1</Node>
      <Node>.2</Node>
      <Node>.3</Node>
      <Node>.4</Node>
      <Node>.5</Node>
      <Node>.6</Node>
      <Node>.7</Node>
      <Node>.8</Node>
      <Node>.9</Node>
      <Node>1</Node>
    </Layer>
    <!-- NTM output layer: 2-->
    <Layer type="Input">
      <Node>-1</Node>
      <Node>-.9</Node>
      <Node>-.8</Node>
      <Node>-.7</Node>
      <Node>-.6</Node>
      <Node>-.5</Node>
      <Node>-.4</Node>
      <Node>-.3</Node>
      <Node>-.2</Node>
      <Node>-.1</Node>
      <Node>0</Node>
      <Node>.1</Node>
      <Node>.2</Node>
      <Node>.3</Node>
      <Node>.4</Node>
      <Node>.5</Node>
      <Node>.6</Node>
      <Node>.7</Node>
      <Node>.8</Node>
      <Node>.9</Node>
      <Node>1</Node>
    </Layer>
    <!--Environment input layer: 3-->
    <Layer type="Output">
      <Node>-1</Node>
      <Node>-.9</Node>
      <Node>-.8</Node>
      <Node>-.7</Node>
      <Node>-.6</Node>
      <Node>-.5</Node>
      <Node>-.4</Node>
      <Node>-.3</Node>
      <Node>-.2</Node>
      <Node>-.1</Node>
      <Node>0</Node>
      <Node>.1</Node>
      <Node>.2</Node>
      <Node>.3</Node>
      <Node>.4</Node>
      <Node>.5</Node>
      <Node>.6</Node>
      <Node>.7</Node>
      <Node>.8</Node>
      <Node>.9</Node>
      <Node>1</Node>
    </Layer>
    <!--NTM write vector: 4-->
    <Layer type="Output">
      <!--memory vector-->
      <Node>-1</Node>
      <Node>-.9</Node>
      <Node>-.8</Node>
      <Node>-.7</Node>
      <Node>-.6</Node>
      <Node>-.5</Node>
      <Node>-.4</Node>
      <Node>-.3</Node>
      <Node>-.2</Node>
      <Node>-.1</Node>
      <Node>0</Node>
      <Node>.1</Node>
      <Node>.2</Node>
      <Node>.3</Node>
      <Node>.4</Node>
      <Node>.5</Node>
      <Node>.6</Node>
      <Node>.7</Node>
      <Node>.8</Node>
      <Node>.9</Node>
      <Node>1</Node>
    </Layer>
    <!--NTM controls: 5-->
    <Layer type="Output">
      <!-- interp & jump-->
      <Node>-1</Node>
      <Node>-0.5</Node>
      <!-- shifts -->
      <Node>0</Node>
      <Node>0.5</Node>
      <Node>1</Node>
    </Layer>
    
    <!--start connected to shift/jump controls-->
    <Connection>2,88</Connection>
    <Connection>3,66</Connection>
    <Connection>4,67</Connection>
    <Connection>5,68</Connection>
    <Connection>6,69</Connection>
    <Connection>7,70</Connection>
    <Connection>8,71</Connection>
    <Connection>9,72</Connection>
    <Connection>10,73</Connection>
    <Connection>11,74</Connection>
    <Connection>12,75</Connection>
    <Connection>13,76</Connection>
    <Connection>14,77</Connection>
    <Connection>15,78</Connection>
    <Connection>16,79</Connection>
    <Connection>17,80</Connection>
    <Connection>18,81</Connection>
    <Connection>19,82</Connection>
    <Connection>20,83</Connection>
    <Connection>21,84</Connection>
    <Connection>22,85</Connection>
    <Connection>23,86</Connection>
    <Connection>24,45</Connection>
    <Connection>25,46</Connection>
    <Connection>26,47</Connection>
    <Connection>27,48</Connection>
    <Connection>28,49</Connection>
    <Connection>29,50</Connection>
    <Connection>30,51</Connection>
    <Connection>31,52</Connection>
    <Connection>32,53</Connection>
    <Connection>33,54</Connection>
    <Connection>34,55</Connection>
    <Connection>35,56</Connection>
    <Connection>36,57</Connection>
    <Connection>37,58</Connection>
    <Connection>38,59</Connection>
    <Connection>39,60</Connection>
    <Connection>40,61</Connection>
    <Connection>41,62</Connection>
    <Connection>42,63</Connection>
    <Connection>43,64</Connection>
    <Connection>44,65</Connection>
    
    
  </Substrate>
  
  <!-- Complexity Regulation Parameters -->
  <ComplexityRegulation>
    <!-- "Absolute" or "Relative"
       Absolute: Defines an absolute ceiling on complexity.
       Relative: Defines a relative ceiling on complexity. E.g. relative to the complexity at the end of the most recent simplification phase. -->
    <ComplexityRegulationStrategy>Absolute</ComplexityRegulationStrategy>

    <!-- The complexity ceiling. When complexity reaches this threshold, the algorithm will switch from complexifying to simplification -->
    <ComplexityThreshold>50</ComplexityThreshold>

  </ComplexityRegulation>


  <!-- Evolution Algorithm Parameters -->
  <EAParams>
    <!-- Number of species in the population. Default: 10 -->
    <SpecieCount>10</SpecieCount>

    <!-- We sort specie genomes by fitness and keep the top N%, the other genomes are removed to make way for the offspring. Default: 0.2  -->
    <ElitismProportion>0.2</ElitismProportion>

    <!-- We sort specie genomes by fitness and select parent genomes for producing offspring from the top N%. 
         Selection is performed prior to elitism being applied, therefore selecting from more genomes than will be made elite is possible. Default: 0.2 -->
    <SelectionProportion>0.2</SelectionProportion>

    <!-- The proportion of offspring to be produced from asexual reproduction (mutation). Default: 0.5 -->
    <OffspringAsexualProportion>0.5</OffspringAsexualProportion>

    <!-- The proportion of offspring to be produced from sexual reproduction. Default: 0.5 -->
    <OffspringSexualProportion>0.5</OffspringSexualProportion>

    <!-- The proportion of sexual reproductions that will use genomes from different species. Default: 0.01 -->
    <InterspeciesMatingProportion>0.01</InterspeciesMatingProportion>

  </EAParams>


  <!-- Genome Parameters -->
  <GenomeParams>
    <!-- The connection weight range to use in NEAT genomes. E.g. a value of 5 defines a weight range of -5 to 5. 
         The weight range is strictly enforced - e.g. when creating new connections and mutating existing ones. Default: 5.0 -->
    <ConnectionWeightRange>1.0</ConnectionWeightRange>

    <!-- A proportion that specifies the number of interconnections to make between input and output neurons in an initial random population. 
         This is a proportion of the total number of possible interconnections. Default: 0.05 -->
    <InitialInterconnectionsProportion>0.05</InitialInterconnectionsProportion>

    <!-- The probability that all excess and disjoint genes are copied into an offspring genome during sexual reproduction. 
         Currently the execss/disjoint genes are copied in an all or nothing strategy. Default: 0.1 -->
    <DisjointExcessGenesRecombinedProbability>0.1</DisjointExcessGenesRecombinedProbability>

    <!-- The probability that a genome mutation operates on genome connection weights. Default: 0.988 -->
    <ConnectionWeightMutationProbability>0.895</ConnectionWeightMutationProbability>

    <!-- The probability that a genome mutation is an 'add node' mutation. Default: 0.001 -->
    <AddNodeMutationProbability>0.0005</AddNodeMutationProbability>

    <!-- The probability that a genome mutation is an 'add connection' mutation. Default: 0.01 -->
    <AddConnectionMutationProbability>0.05</AddConnectionMutationProbability>

    <!-- The probability that a genome mutation is a 'delete connection' mutation. Default: 0.001 -->
    <DeleteConnectionMutationProbability>0.05</DeleteConnectionMutationProbability>
  </GenomeParams>

</Config>